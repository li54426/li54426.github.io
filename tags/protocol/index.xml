<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Protocol on 演示站点</title>
        <link>https://li54426.github.io/tags/protocol/</link>
        <description>Recent content in Protocol on 演示站点</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Example Person</copyright>
        <lastBuildDate>Wed, 27 Sep 2023 09:53:31 +0000</lastBuildDate><atom:link href="https://li54426.github.io/tags/protocol/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>websocket</title>
        <link>https://li54426.github.io/p/websocket/</link>
        <pubDate>Wed, 27 Sep 2023 09:53:31 +0000</pubDate>
        
        <guid>https://li54426.github.io/p/websocket/</guid>
        <description>&lt;ul&gt;
&lt;li&gt;content
{:toc}&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;websocket-协议&#34;&gt;websocket 协议
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;WebSocket 是一种用于在 Web 浏览器和服务器之间进行&lt;strong&gt;双向通信&lt;/strong&gt;的协议。它提供了实时性、高效性和可靠性，使得服务器可以主动推送数据给客户端，客户端也可以向服务器发送数据，实现了全双工通信。&lt;/li&gt;
&lt;li&gt;当我们使用 &lt;code&gt;HTTP&lt;/code&gt;协议时, 因为 http使用了 cs架构, 因此, 我们没有办法让服务器主动向客户推送消息, 如果我们想要主动推送消息, 只能通过更低层次 &lt;code&gt;tcp&lt;/code&gt; 来进行双向的通信&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;特点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;双向通信&lt;/li&gt;
&lt;li&gt;建立在&lt;code&gt; TCP 协议&lt;/code&gt;之上，服务器端的实现比较容易。&lt;/li&gt;
&lt;li&gt;与 &lt;code&gt;HTTP 协议&lt;/code&gt;有着良好的兼容性。默认端口&lt;strong&gt;也是&lt;/strong&gt; 80 和 443，并且&lt;code&gt;握手阶段&lt;/code&gt;采用 HTTP 协议，因此握手时不容易屏蔽，&lt;code&gt;能通过各种 HTTP 代理服务器&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
